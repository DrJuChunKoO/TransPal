---
import type { SpeechDetail, SpeechContentItem } from '../types/speech';
import Avatar from './Avatar.astro';
import MessageText from './MessageText.astro';
import ShareButton from './ShareButton';

export interface Props {
  speech: SpeechDetail;
  targetMessage: SpeechContentItem;
  contextMessages: SpeechContentItem[];
}

const { speech, targetMessage, contextMessages } = Astro.props;

// Format date for display
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('zh-TW', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<div class="max-w-4xl mx-auto px-4 sm:px-6 py-6 sm:py-8">
  <!-- Back to speech link -->
  <div class="mb-4 sm:mb-6">
    <a 
      href={`/speeches/${speech.info.filename}`}
      class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors touch-manipulation min-h-[44px] px-2 -mx-2"
    >
      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      返回完整會議記錄
    </a>
  </div>

  <!-- Speech header -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 sm:p-6 mb-6 sm:mb-8">
    <h1 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-gray-100 mb-2 sm:mb-3 leading-tight">
      {speech.info.name}
    </h1>
    
    <div class="flex flex-col sm:flex-row sm:flex-wrap gap-2 sm:gap-4 text-sm text-gray-600 dark:text-gray-400 mb-3 sm:mb-4">
      <div class="flex items-center">
        <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a1 1 0 011-1h6a1 1 0 011 1v4h3a2 2 0 012 2v1a2 2 0 01-2 2H6a2 2 0 01-2-2V9a2 2 0 012-2h2z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 17v2a2 2 0 01-2 2H10a2 2 0 01-2-2v-2" />
        </svg>
        {formatDate(speech.info.date)}
      </div>
      
      {speech.info.time && (
        <div class="flex items-center">
          <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          {speech.info.time}
        </div>
      )}
    </div>

    <!-- Highlighted speaker info -->
    <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">
      <div class="flex flex-col sm:flex-row sm:items-center gap-2">
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4 text-blue-600 dark:text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
          </svg>
          <span class="text-blue-800 dark:text-blue-200 font-medium text-sm sm:text-base">
            {targetMessage.speaker} 的發言
          </span>
        </div>
      </div>
    </div>
  </div>

  <!-- Context messages -->
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
    <div class="p-4 sm:p-6">
      <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
        對話內容
      </h2>
      
      <div class="space-y-3 sm:space-y-4">
        {contextMessages.map((message) => (
          <div 
            class={`flex gap-3 sm:gap-4 p-3 sm:p-4 rounded-lg transition-colors ${
              message.id === targetMessage.id 
                ? 'bg-yellow-50 dark:bg-yellow-900/20 border-2 border-yellow-200 dark:border-yellow-800' 
                : 'hover:bg-gray-50 dark:hover:bg-gray-700/50'
            }`}
          >
            <!-- Avatar -->
            <div class="flex-shrink-0">
              <Avatar speakerName={message.speaker} />
            </div>

            <!-- Content -->
            <div class="flex-1 min-w-0">
              <!-- Speaker and time -->
              <div class="flex flex-wrap items-center gap-2 mb-2">
                <h3 class={`font-semibold text-sm sm:text-base ${
                  message.id === targetMessage.id 
                    ? 'text-yellow-900 dark:text-yellow-100' 
                    : 'text-gray-900 dark:text-gray-100'
                }`}>
                  {message.speaker}
                </h3> 
                {message.id === targetMessage.id && (
                  <span class="text-xs text-yellow-700 dark:text-yellow-300 bg-yellow-100 dark:bg-yellow-800 px-2 py-1 rounded font-medium">
                    重點發言
                  </span>
                )}
              </div>

              <!-- Message text -->
              <div class={`text-sm sm:text-base leading-relaxed ${
                message.id === targetMessage.id 
                  ? 'text-yellow-800 dark:text-yellow-200' 
                  : 'text-gray-700 dark:text-gray-300'
              }`}>
                <MessageText content={message.text} />
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Share actions -->
  <div class="mt-6 sm:mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 sm:p-6">
    <ShareButton 
      client:load
      url={Astro.url.href}
      title={`${targetMessage.speaker} 在 ${speech.info.name} 中的發言`}
      speaker={targetMessage.speaker}
      speechName={speech.info.name}
    />
  </div>
</div>

