---
import Layout from "../layouts/Layout.astro";
import ErrorDisplay from "../components/ErrorDisplay.astro";
import { getSpeeches } from "../utils/speeches";

// Get error details from query parameters
const url = new URL(Astro.request.url);
const errorType = url.searchParams.get("type") || "unknown";
const errorContext = url.searchParams.get("context") || "";
const errorMessage = url.searchParams.get("message") || "";

// Customize error display based on type
let title = "發生錯誤";
let message = "抱歉，發生了未預期的錯誤。";
let type: "error" | "warning" | "info" = "error";

switch (errorType) {
  case "speech_not_found":
    title = "對話未找到";
    message = "指定的對話不存在或已被移除。";
    type = "warning";
    break;
  case "message_not_found":
    title = "訊息未找到";
    message = "指定的對話訊息不存在或已被移除。";
    type = "warning";
    break;
  case "invalid_data":
    title = "資料格式錯誤";
    message = "對話資料格式有誤，無法正常顯示。";
    type = "error";
    break;
  case "network_error":
    title = "網路連線問題";
    message = "無法載入內容，請檢查您的網路連線。";
    type = "warning";
    break;
  case "build_error":
    title = "系統錯誤";
    message = "系統暫時無法正常運作，請稍後再試。";
    type = "error";
    break;
  default:
    if (errorMessage) {
      message = errorMessage;
    }
}

// Get recent speeches for suggestions
let recentSpeeches: any[] = [];
try {
  const speeches = await getSpeeches();
  recentSpeeches = speeches.slice(0, 5);
} catch (error) {
  console.error("Error loading recent speeches for error page:", error);
}

const pageTitle = `${title} - TransPal`;
const pageDescription = message;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  ogTitle={title}
  ogDescription={message}
  ogType="website"
>
  <div class="min-h-[60vh] flex items-center justify-center px-4 sm:px-6">
    <div class="max-w-2xl mx-auto">
      <ErrorDisplay
        title={title}
        message={message}
        type={type}
        context={errorContext}
        showRetry={true}
        showHome={true}
        showBack={true}
      />

      <!-- Helpful suggestions -->
      {
        recentSpeeches.length > 0 && (
          <div class="mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 sm:p-6">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
              您可能感興趣的對話
            </h3>
            <div class="space-y-3">
              {recentSpeeches.map((speech) => (
                <a
                  href={`/speeches/${speech.filename}`}
                  class="block p-3 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 touch-manipulation"
                >
                  <div class="font-medium text-gray-900 dark:text-gray-100 text-sm sm:text-base">
                    {speech.name}
                  </div>
                  <div class="text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1">
                    {new Date(speech.date).toLocaleDateString("zh-TW", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </div>
                </a>
              ))}
            </div>
          </div>
        )
      }

      <!-- Contact information -->
      <div class="mt-6 text-center">
        <p class="text-sm text-gray-500 dark:text-gray-400">
          如果問題持續發生，請
          <a
            href="mailto:support@transpal.example.com"
            class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors"
          >
            聯繫我們
          </a>
        </p>
      </div>
    </div>
  </div>
</Layout>
